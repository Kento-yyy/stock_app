{
  "version": 3,
  "sources": ["../bundle-IufCx9/checked-fetch.js", "../../../proxy/worker.js", "../../../../../../../.nvm/versions/node/v22.18.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../.nvm/versions/node/v22.18.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-IufCx9/middleware-insertion-facade.js", "../../../../../../../.nvm/versions/node/v22.18.0/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-IufCx9/middleware-loader.entry.ts"],
  "sourceRoot": "/home/kento/projects/202508/LLM/stock_app/.wrangler/tmp/dev-uAInOm",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// Cloudflare Worker to manage portfolio and quotes_new in D1\n// - Endpoints:\n//   - GET    /api/portfolio\n//   - POST   /api/portfolio  JSON {symbol, shares, currency, company_name?}\n//   - DELETE /api/portfolio?symbol=XXXX\n//   - GET    /api/quotes_new\n//   - POST   /api/quotes/refresh         // fetch Yahoo for portfolio symbols + USDJPY=X\n//   - GET    /api/portfolio_with_prices  // join holdings + quotes_new, include JPY values\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    // normalize path: strip trailing slashes\n    const pathname = (url.pathname || '/').replace(/\\/+$/, '') || '/';\n\n    // CORS preflight\n    if (request.method === 'OPTIONS') {\n      return new Response(null, corsHeaders());\n    }\n\n    try {\n      if (pathname === '/api/portfolio') {\n        if (request.method === 'GET') return listHoldings(env);\n        if (request.method === 'POST') return upsertHolding(request, env);\n        if (request.method === 'DELETE') return deleteHolding(url, env);\n        return notAllowed(['GET', 'POST', 'DELETE']);\n      }\n      if (pathname === '/api/quotes_new') {\n        if (request.method === 'GET') return listQuotesNew(env);\n        return notAllowed(['GET']);\n      }\n      if (pathname === '/api/quotes_new/refresh-current' || pathname === '/api/quotes_new/refresh-baselines') {\n        if (request.method === 'POST') return refreshQuotes(request, env, url);\n        return notAllowed(['POST']);\n      }\n      if (pathname === '/api/quotes/refresh' || pathname === '/api/quotes/refresh-current') {\n        if (request.method === 'POST') return refreshQuotes(request, env, url);\n        return notAllowed(['POST']);\n      }\n      if (pathname === '/api/usdjpy') {\n        if (request.method === 'GET') return getUsdJpy(env);\n        return notAllowed(['GET']);\n      }\n      if (pathname === '/api/portfolio_with_prices') {\n        if (request.method === 'GET') return portfolioWithPrices(env);\n        return notAllowed(['GET']);\n      }\n      if (pathname === '/api/debug/yahoo') {\n        const syms = (url.searchParams.get('symbols') || '').split(',').map(s=>s.trim()).filter(Boolean);\n        if (!syms.length) return json({error:'symbols required'}, 400);\n        const data = await fetchYahooQuotes(syms);\n        return json({ count: Object.keys(data).length, symbols: Object.keys(data) });\n      }\n\n      return new Response('Not Found', { status: 404, headers: corsHeaders() });\n    } catch (e) {\n      const msg = e && e.stack ? String(e.stack) : String(e);\n      return json({ ok: false, error: msg }, 500);\n    }\n  },\n  async scheduled(event, env, ctx) {\n    // Periodic refresh to keep quotes/baselines warm\n    try {\n      await refreshQuotes(new Request('https://dummy'), env, new URL('https://dummy'));\n    } catch (e) {\n      // ignore; next run will retry\n    }\n  }\n};\n\n// CORS helper\nfunction corsHeaders() {\n  return {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n  };\n}\n\nfunction json(obj, status = 200, headers = {}) {\n  return new Response(JSON.stringify(obj), {\n    status,\n    headers: { 'Content-Type': 'application/json; charset=utf-8', ...corsHeaders(), ...headers },\n  });\n}\n\nfunction notAllowed(methods) {\n  return new Response('Method Not Allowed', {\n    status: 405,\n    headers: { ...corsHeaders(), 'Allow': methods.join(', ') },\n  });\n}\n\nasync function listHoldings(env) {\n  const rs = await env.DB.prepare(\n    'SELECT symbol, shares, currency, company_name FROM holdings ORDER BY symbol'\n  ).all();\n  return json(rs.results || []);\n}\n\nasync function upsertHolding(request, env) {\n  const body = await safeJson(request);\n  const symbol = (body.symbol || '').toString().trim().toUpperCase();\n  if (!symbol) return json({ ok: false, error: 'symbol required' }, 400);\n  const shares = Number(body.shares);\n  if (!Number.isFinite(shares)) return json({ ok: false, error: 'shares must be number' }, 400);\n  const currency = (body.currency || '').toString().trim().toUpperCase() || null;\n  const company_name = (body.company_name || body.name || '').toString().trim() || null;\n\n  await env.DB.prepare(\n    'INSERT INTO holdings (symbol, shares, currency, company_name) VALUES (?, ?, ?, ?)\\n' +\n    'ON CONFLICT(symbol) DO UPDATE SET shares=excluded.shares, currency=excluded.currency, company_name=excluded.company_name'\n  ).bind(symbol, shares, currency, company_name).run();\n\n  return json({ ok: true });\n}\n\nasync function deleteHolding(url, env) {\n  const symbol = (url.searchParams.get('symbol') || '').toString().trim().toUpperCase();\n  if (!symbol) return json({ ok: false, error: 'symbol required' }, 400);\n  await env.DB.prepare('DELETE FROM holdings WHERE symbol = ?').bind(symbol).run();\n  return json({ ok: true });\n}\n\nasync function listQuotesNew(env) {\n  const rs = await env.DB.prepare(\n    'SELECT symbol, price, currency, updated_at, price_1d, updated_1d_at, price_1m, updated_1m_at, price_1y, updated_1y_at FROM quotes_new ORDER BY symbol'\n  ).all();\n  return json(rs.results || []);\n}\n\nasync function getUsdJpy(env) {\n  // Try existing first from dedicated usd_jpy table (id=1)\n  let rs = await env.DB.prepare(\n    'SELECT id, price, updated_at, price_1d, updated_1d_at, price_1m, updated_1m_at, price_1y, updated_1y_at FROM usd_jpy WHERE id = 1'\n  ).all();\n  let row = (rs.results && rs.results[0]) || null;\n  // If missing or any baseline null, backfill via refresh and/or chart\n  let needsBackfill = !row || row.price == null || row.price_1d == null || row.price_1m == null || row.price_1y == null;\n  if (needsBackfill) {\n    try {\n      const url = new URL('https://dummy');\n      url.searchParams.set('symbols', 'USDJPY=X');\n      await refreshQuotes(\n        new Request('https://dummy', { method: 'POST', body: JSON.stringify({ symbols: ['USDJPY=X'] }), headers: { 'content-type': 'application/json' } }),\n        env,\n        url\n      );\n    } catch (_) { /* ignore */ }\n    // Read again\n    rs = await env.DB.prepare(\n      'SELECT id, price, updated_at, price_1d, updated_1d_at, price_1m, updated_1m_at, price_1y, updated_1y_at FROM usd_jpy WHERE id = 1'\n    ).all();\n    row = (rs.results && rs.results[0]) || null;\n  }\n\n  // Final sanitize using Yahoo chart as ultimate fallback\n  if (!row) row = { id: 1 };\n  const nowIso = new Date().toISOString();\n  let price = toNum(row.price);\n  let p1d = toNum(row.price_1d);\n  let p1m = toNum(row.price_1m);\n  let p1y = toNum(row.price_1y);\n  let chartLast = NaN, chartPrev = NaN, chartM1 = NaN, chartY1 = NaN;\n  try {\n    const ch = await fetchYahooChart('USDJPY=X', '2y', '1d');\n    const bl = computeBaselinesFromChart(ch) || {};\n    chartLast = toNum(bl.last);\n    chartPrev = toNum(bl.prevClose);\n    chartM1 = toNum(bl.m1);\n    chartY1 = toNum(bl.y1);\n  } catch (_) { /* ignore */ }\n  if (!Number.isFinite(price) && Number.isFinite(chartLast)) price = chartLast;\n  if (!Number.isFinite(p1d) && Number.isFinite(chartPrev)) p1d = chartPrev;\n  if (!Number.isFinite(p1m) && Number.isFinite(chartM1)) p1m = chartM1;\n  if (!Number.isFinite(p1y) && Number.isFinite(chartY1)) p1y = chartY1;\n  const priceFallback = Number.isFinite(price) ? price : (Number.isFinite(chartLast) ? chartLast : null);\n  const out = {\n    id: 1,\n    price: Number.isFinite(price) ? price : null,\n    updated_at: row.updated_at || nowIso,\n    price_1d: Number.isFinite(p1d) ? p1d : priceFallback,\n    updated_1d_at: row.updated_1d_at || nowIso,\n    price_1m: Number.isFinite(p1m) ? p1m : priceFallback,\n    updated_1m_at: row.updated_1m_at || nowIso,\n    price_1y: Number.isFinite(p1y) ? p1y : priceFallback,\n    updated_1y_at: row.updated_1y_at || nowIso,\n  };\n  // If we had to fill any nulls, persist/insert to usd_jpy\n  if (\n    !row || row.price == null || row.price_1d == null || row.price_1m == null || row.price_1y == null ||\n    (out.price_1d != row.price_1d) || (out.price_1m != row.price_1m) || (out.price_1y != row.price_1y) || (out.price != row.price)\n  ) {\n    try {\n      await env.DB.prepare(\n        'INSERT INTO usd_jpy (id, price, updated_at, price_1d, updated_1d_at, price_1m, updated_1m_at, price_1y, updated_1y_at) VALUES (1, ?, ?, ?, ?, ?, ?, ?, ?)\\n' +\n        'ON CONFLICT(id) DO UPDATE SET price=excluded.price, updated_at=excluded.updated_at, price_1d=excluded.price_1d, updated_1d_at=excluded.updated_1d_at, price_1m=excluded.price_1m, updated_1m_at=excluded.updated_1m_at, price_1y=excluded.price_1y, updated_1y_at=excluded.updated_1y_at'\n      ).bind(out.price, nowIso, out.price_1d, out.updated_1d_at, out.price_1m, out.updated_1m_at, out.price_1y, out.updated_1y_at).run();\n    } catch (_) { /* ignore */ }\n  }\n  return json(out);\n}\n\nasync function refreshQuotes(request, env, url) {\n  // Allow debug override: symbols from body or query, and dry-run via ?dry=1\n  const body = await safeJson(request);\n  let syms = [];\n  const bodySyms = (Array.isArray(body.symbols) ? body.symbols : (typeof body.symbols === 'string' ? String(body.symbols).split(',') : [])).map(s=>String(s).trim()).filter(Boolean);\n  const querySyms = (url.searchParams.get('symbols') || '').split(',').map(s=>s.trim()).filter(Boolean);\n  const overrideSyms = bodySyms.length ? bodySyms : querySyms;\n  const dry = (String(body.dry ?? url.searchParams.get('dry') ?? '') === '1');\n\n  if (overrideSyms.length) {\n    syms = overrideSyms.map(s=>s.toUpperCase());\n  } else {\n    // load holdings\n    const hr = await env.DB.prepare('SELECT symbol FROM holdings ORDER BY symbol').all();\n    const holdSyms = (hr.results || []).map(r => String(r.symbol).toUpperCase());\n    // include existing quotes_new symbols for backfill of null baselines\n    const qr = await env.DB.prepare('SELECT symbol FROM quotes_new ORDER BY symbol').all();\n    const existSyms = (qr.results || []).map(r => String(r.symbol).toUpperCase());\n    const set = new Set([...holdSyms, ...existSyms]);\n    syms = Array.from(set);\n  }\n\n  // include USDJPY=X for FX conversion\n  if (!syms.includes('USDJPY=X')) syms.push('USDJPY=X');\n  const nowIso = new Date().toISOString();\n\n  // Fetch quotes in chunks (Yahoo only)\n  const chunked = chunk(syms, 10);\n  let quotes = {};\n  const chunks = [];\n  for (const ch of chunked) {\n    const detail = { symbols: ch, ok: false, count: 0 };\n    try {\n      const q = await fetchYahooQuotes(ch);\n      Object.assign(quotes, q);\n      detail.ok = true;\n      detail.count = Object.keys(q).length;\n    } catch (e) {\n      detail.error = String(e && e.stack ? e.stack : e);\n    }\n    chunks.push(detail);\n  }\n\n  // Fetch baselines (prevClose, 1m, 1y) from Yahoo chart API\n  // Compute baselines for all requested symbols (not just those returned by /quote)\n  const allSymbols = Array.from(new Set(syms.map(s => String(s).toUpperCase())));\n  const baselineMap = await fetchYahooBaselines(allSymbols);\n\n  // Load existing prices to use as a last-resort fallback for baselines\n  const existingPriceMap = {};\n  try {\n    const er = await env.DB.prepare('SELECT symbol, price FROM quotes_new').all();\n    for (const row of (er.results || [])) {\n      const k = String(row.symbol || '').toUpperCase();\n      const v = toNum(row.price);\n      if (k && Number.isFinite(v)) existingPriceMap[k] = v;\n    }\n  } catch (_) { /* ignore */ }\n\n  // If dry-run, just return what would be inserted\n  if (dry) {\n    const sampleSyms = Object.keys(quotes).slice(0, 3);\n    const sample = sampleSyms.map(s => ({\n      symbol: s,\n      quote: quotes[s],\n      baselines: baselineMap[s] || null,\n    }));\n    return json({ ok: true, dry: true, total: Object.keys(quotes).length, chunks, symbols: syms, sample });\n  }\n\n  // Upsert into quotes_new (price + currency + baselines). Ensure baselines fallback to price when missing.\n  const stmt = env.DB.prepare(\n    'INSERT INTO quotes_new (symbol, price, currency, updated_at, price_1d, updated_1d_at, price_1m, updated_1m_at, price_1y, updated_1y_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\\n' +\n    'ON CONFLICT(symbol) DO UPDATE SET ' +\n      'price=excluded.price, currency=excluded.currency, updated_at=excluded.updated_at, ' +\n      'price_1d=excluded.price_1d, updated_1d_at=excluded.updated_1d_at, ' +\n      'price_1m=excluded.price_1m, updated_1m_at=excluded.updated_1m_at, ' +\n      'price_1y=excluded.price_1y, updated_1y_at=excluded.updated_1y_at'\n  );\n  for (const sym of allSymbols) {\n    const r = quotes[sym];\n    let price = toNum(r && (r.regularMarketPrice ?? r.price));\n    const ccy = ((r && r.currency) ? String(r.currency).toUpperCase() : guessCurrency(sym));\n    const bl = baselineMap[sym] || {};\n    let prev = toNum(r && (r.regularMarketPreviousClose));\n    const blPrev = toNum(bl.prevClose);\n    const blM1 = toNum(bl.m1);\n    const blY1 = toNum(bl.y1);\n    const blLast = toNum(bl.last);\n    if (!isFinite(price) && isFinite(blLast)) price = blLast;\n    if (!isFinite(price) && Number.isFinite(existingPriceMap[sym])) price = existingPriceMap[sym];\n    if (!isFinite(prev) && isFinite(blPrev)) prev = blPrev;\n    // Fallbacks: fill baselines with current price (or last close) if missing\n    const priceFallback = Number.isFinite(price) ? price : (Number.isFinite(blLast) ? blLast : (Number.isFinite(existingPriceMap[sym]) ? existingPriceMap[sym] : null));\n    const prevVal = isFinite(prev) ? prev : priceFallback;\n    const m1Val = isFinite(blM1) ? blM1 : priceFallback;\n    const y1Val = isFinite(blY1) ? blY1 : priceFallback;\n\n    await stmt.bind(\n      sym,\n      isFinite(price) ? price : null,\n      ccy,\n      nowIso,\n      prevVal,\n      prevVal != null ? nowIso : null,\n      m1Val,\n      m1Val != null ? nowIso : null,\n      y1Val,\n      y1Val != null ? nowIso : null\n    ).run();\n  }\n\n  // Mirror USDJPY=X into dedicated usd_jpy table to avoid nulls and simplify consumers\n  try {\n    const fxSym = 'USDJPY=X';\n    const r = quotes[fxSym];\n    let price = toNum(r && (r.regularMarketPrice ?? r.price));\n    const bl = baselineMap[fxSym] || {};\n    let prev = toNum(r && r.regularMarketPreviousClose);\n    const blPrev = toNum(bl.prevClose);\n    const blM1 = toNum(bl.m1);\n    const blY1 = toNum(bl.y1);\n    const blLast = toNum(bl.last);\n    if (!isFinite(price) && isFinite(blLast)) price = blLast;\n    if (!isFinite(prev) && isFinite(blPrev)) prev = blPrev;\n    const priceFallback = Number.isFinite(price) ? price : (Number.isFinite(blLast) ? blLast : null);\n    const prevVal = isFinite(prev) ? prev : priceFallback;\n    const m1Val = isFinite(blM1) ? blM1 : priceFallback;\n    const y1Val = isFinite(blY1) ? blY1 : priceFallback;\n    await env.DB.prepare(\n      'INSERT INTO usd_jpy (id, price, updated_at, price_1d, updated_1d_at, price_1m, updated_1m_at, price_1y, updated_1y_at) VALUES (1, ?, ?, ?, ?, ?, ?, ?, ?)\\n' +\n      'ON CONFLICT(id) DO UPDATE SET price=excluded.price, updated_at=excluded.updated_at, price_1d=excluded.price_1d, updated_1d_at=excluded.updated_1d_at, price_1m=excluded.price_1m, updated_1m_at=excluded.updated_1m_at, price_1y=excluded.price_1y, updated_1y_at=excluded.updated_1y_at'\n    ).bind(\n      Number.isFinite(price) ? price : null,\n      nowIso,\n      prevVal,\n      prevVal != null ? nowIso : null,\n      m1Val,\n      m1Val != null ? nowIso : null,\n      y1Val,\n      y1Val != null ? nowIso : null\n    ).run();\n  } catch (_) { /* ignore */ }\n\n  return json({ ok: true, updated: Object.keys(quotes).length, chunks });\n}\n\nasync function portfolioWithPrices(env) {\n  // Get holdings and matched quotes\n  const q1 = await env.DB.prepare(\n    'SELECT h.symbol, h.shares, h.currency AS holding_currency, h.company_name,\\n' +\n    '       q.price, q.currency AS price_currency, q.updated_at,\\n' +\n    '       q.price_1d, q.price_1m, q.price_1y\\n' +\n    'FROM holdings h LEFT JOIN quotes_new q ON q.symbol = h.symbol\\n' +\n    'ORDER BY h.symbol'\n  ).all();\n  const rows = q1.results || [];\n\n  // Load FX from usd_jpy table\n  const fxRow = await env.DB.prepare('SELECT price FROM usd_jpy WHERE id = 1').all();\n  const fx = toNum((fxRow.results && fxRow.results[0] && fxRow.results[0].price));\n\n  const out = [];\n  for (const r of rows) {\n    const sym = String(r.symbol).toUpperCase();\n    const price = toNum(r.price);\n    const ccy = String(r.price_currency || r.holding_currency || '').toUpperCase();\n    let jpy = null, jpy_1d = null, jpy_1m = null, jpy_1y = null;\n    if (ccy === 'JPY' && isFinite(price)) {\n      jpy = price;\n      jpy_1d = toNum(r.price_1d);\n      jpy_1m = toNum(r.price_1m);\n      jpy_1y = toNum(r.price_1y);\n    } else if (ccy === 'USD' && isFinite(price) && isFinite(fx) && fx > 0) {\n      jpy = price * fx;\n      if (isFinite(r.price_1d)) jpy_1d = r.price_1d * fx;\n      if (isFinite(r.price_1m)) jpy_1m = r.price_1m * fx;\n      if (isFinite(r.price_1y)) jpy_1y = r.price_1y * fx;\n    }\n\n    out.push({\n      symbol: sym,\n      company_name: r.company_name || null,\n      shares: toNum(r.shares),\n      currency: String(r.holding_currency || '').toUpperCase() || null,\n      price: isFinite(price) ? price : null,\n      price_currency: ccy || null,\n      jpy: isFinite(jpy) ? jpy : null,\n      jpy_1d: isFinite(jpy_1d) ? jpy_1d : null,\n      jpy_1m: isFinite(jpy_1m) ? jpy_1m : null,\n      jpy_1y: isFinite(jpy_1y) ? jpy_1y : null,\n      updated_at: r.updated_at || null,\n    });\n  }\n  return json(out);\n}\n\nasync function safeJson(request) {\n  try { return await request.json(); } catch (_) { return {}; }\n}\n\nfunction chunk(arr, n) {\n  const out = [];\n  for (let i = 0; i < arr.length; i += n) out.push(arr.slice(i, i + n));\n  return out;\n}\n\nfunction toNum(v) {\n  const n = Number(v);\n  return Number.isFinite(n) ? n : NaN;\n}\n\nfunction guessCurrency(sym) {\n  if (/\\.T$/i.test(sym)) return 'JPY';\n  if (sym === 'USDJPY=X') return 'JPY';\n  return 'USD';\n}\n\nasync function fetchYahooQuotes(symbols) {\n  const url = 'https://query1.finance.yahoo.com/v7/finance/quote?symbols=' + encodeURIComponent(symbols.join(','));\n  const res = await fetch(url, {\n    cf: { cacheTtl: 30, cacheEverything: false },\n    headers: {\n      'Accept': 'application/json',\n      'Accept-Language': 'ja,en-US;q=0.9,en;q=0.8',\n      'Referer': 'https://finance.yahoo.com/',\n      // Pretend to be Mozilla Firefox to reduce risk of blocking\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv=128.0) Gecko/20100101 Firefox/128.0'\n    }\n  });\n  if (!res.ok) throw new Error('Yahoo HTTP ' + res.status);\n  const j = await res.json();\n  const arr = (j && j.quoteResponse && j.quoteResponse.result) || [];\n  const out = {};\n  for (const r of arr) {\n    if (r && r.symbol) out[String(r.symbol).toUpperCase()] = r;\n  }\n  return out;\n}\n\n// Fetch baselines via Yahoo chart API for given symbols\n// Returns map: SYMBOL -> { prevClose, m1, y1 }\nasync function fetchYahooBaselines(symbols){\n  const out = {};\n  for (const s0 of symbols){\n    const s = String(s0).toUpperCase();\n    try{\n      const ch = await fetchYahooChart(s, '2y', '1d');\n      const bl = computeBaselinesFromChart(ch);\n      if (bl) out[s] = bl;\n    }catch(_){ /* ignore per-symbol failure */ }\n  }\n  return out;\n}\n\nasync function fetchYahooChart(symbol, range='2y', interval='1d'){\n  const url = 'https://query1.finance.yahoo.com/v8/finance/chart/' + encodeURIComponent(symbol) +\n              '?range=' + encodeURIComponent(range) + '&interval=' + encodeURIComponent(interval) + '&includePrePost=false';\n  const res = await fetch(url, {\n    cf: { cacheTtl: 60, cacheEverything: false },\n    headers: {\n      'Accept': 'application/json',\n      'Accept-Language': 'ja,en-US;q=0.9,en;q=0.8',\n      'Referer': 'https://finance.yahoo.com/',\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv=128.0) Gecko/20100101 Firefox/128.0'\n    }\n  });\n  if (!res.ok) throw new Error('Yahoo chart HTTP ' + res.status);\n  const j = await res.json();\n  const r = j && j.chart && j.chart.result && j.chart.result[0];\n  if (!r) throw new Error('Yahoo chart no result for ' + symbol);\n  const ts = (r.timestamp || []).map(t => Number(t) * 1000);\n  const closes = ((r.indicators && r.indicators.quote && r.indicators.quote[0] && r.indicators.quote[0].close) || []).map(v => (v==null ? NaN : Number(v)));\n  return { ts, closes };\n}\n\nfunction computeBaselinesFromChart(ch){\n  if (!ch || !Array.isArray(ch.ts) || !Array.isArray(ch.closes) || ch.ts.length !== ch.closes.length) return null;\n  const now = Date.now();\n  const target1m = now - 30*24*3600*1000;\n  const target1y = now - 365*24*3600*1000;\n\n  // prevClose: choose last valid close before today (UTC), else last valid\n  let idxPrev = lastIndexBefore(ch.ts, endOfPrevTradingDay(now));\n  let prevClose = valueAtOrEarlier(ch.closes, idxPrev);\n  if (!isFinite(prevClose)) {\n    const lastIdx = lastValidIndex(ch.closes);\n    if (lastIdx >= 0) prevClose = ch.closes[lastIdx];\n  }\n\n  // 1M baseline\n  const idx1m = lastIndexBefore(ch.ts, target1m);\n  let m1 = valueAtOrEarlier(ch.closes, idx1m);\n  if (!isFinite(m1)) {\n    // fallback to earliest or last valid\n    const firstIdx = firstValidIndex(ch.closes);\n    const lastIdx = lastValidIndex(ch.closes);\n    m1 = isFinite(ch.closes[idx1m]) ? ch.closes[idx1m] : (firstIdx >= 0 ? ch.closes[firstIdx] : (lastIdx >= 0 ? ch.closes[lastIdx] : NaN));\n  }\n\n  // 1Y baseline\n  const idx1y = lastIndexBefore(ch.ts, target1y);\n  let y1 = valueAtOrEarlier(ch.closes, idx1y);\n  if (!isFinite(y1)) {\n    const firstIdx = firstValidIndex(ch.closes);\n    const lastIdx = lastValidIndex(ch.closes);\n    y1 = isFinite(ch.closes[idx1y]) ? ch.closes[idx1y] : (firstIdx >= 0 ? ch.closes[firstIdx] : (lastIdx >= 0 ? ch.closes[lastIdx] : NaN));\n  }\n\n  const out = {};\n  // latest close for price fallback\n  const lastIdx = lastValidIndex(ch.closes);\n  if (lastIdx >= 0 && Number.isFinite(Number(ch.closes[lastIdx]))) out.last = Number(ch.closes[lastIdx]);\n  if (isFinite(prevClose)) out.prevClose = prevClose;\n  if (isFinite(m1)) out.m1 = m1;\n  if (isFinite(y1)) out.y1 = y1;\n  return out;\n}\n\nfunction endOfPrevTradingDay(nowMs){\n  // Approx: previous day 23:59:59 local UTC timestamp. Chart uses exchange tz but we use UTC-day heuristic.\n  const d = new Date(nowMs);\n  d.setUTCHours(0,0,0,0);\n  return d.getTime() - 1000; // just before start of today UTC\n}\n\nfunction lastIndexBefore(tsArr, targetMs){\n  let lo = 0, hi = tsArr.length - 1, ans = -1;\n  while (lo <= hi){\n    const mid = (lo + hi) >> 1;\n    if (tsArr[mid] <= targetMs){ ans = mid; lo = mid + 1; }\n    else { hi = mid - 1; }\n  }\n  return ans;\n}\n\nfunction valueAtOrEarlier(arr, idx){\n  if (idx < 0) {\n    // fallback to first valid value\n    return valueAtOrLater(arr, 0);\n  }\n  for (let i = idx; i >= 0; i--){\n    const v = Number(arr[i]);\n    if (Number.isFinite(v)) return v;\n  }\n  return NaN;\n}\n\nfunction valueAtOrLater(arr, idx){\n  for (let i = idx; i < arr.length; i++){\n    const v = Number(arr[i]);\n    if (Number.isFinite(v)) return v;\n  }\n  return NaN;\n}\n\nfunction lastValidIndex(arr){\n  for (let i = arr.length - 1; i >= 0; i--) if (Number.isFinite(Number(arr[i]))) return i;\n  return -1;\n}\n\nfunction firstValidIndex(arr){\n  for (let i = 0; i < arr.length; i++) if (Number.isFinite(Number(arr[i]))) return i;\n  return -1;\n}\n\n// Note: Stooq fallback removed. Yahoo only.\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/kento/projects/202508/LLM/stock_app/proxy/worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/kento/.nvm/versions/node/v22.18.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/kento/.nvm/versions/node/v22.18.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/kento/projects/202508/LLM/stock_app/proxy/worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/kento/projects/202508/LLM/stock_app/.wrangler/tmp/bundle-IufCx9/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/kento/.nvm/versions/node/v22.18.0/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/kento/projects/202508/LLM/stock_app/.wrangler/tmp/bundle-IufCx9/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/kento/projects/202508/LLM/stock_app/.wrangler/tmp/bundle-IufCx9/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["lastIdx"]
}
